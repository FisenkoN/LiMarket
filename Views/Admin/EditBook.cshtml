@using LiMarket_V1._0._0.Models
@model LiMarket_V1._0._0.Models.Book
@{
    ViewBag.Title = "EditBook";
}

<h2>EditBook</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Authors, "Authors", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ if (ViewBag.authorsList.Count >= 1)
                    {
                        foreach (Author a in ViewBag.authorsList)
                        {
                            <input type="checkbox" name="selectedAuthors" value="@a.Id"
                                   @(Model.Authors.Contains(a) ? "checked=\"checked\"" : "") />@a.FirstName @a.LastName <br />
                            }
                        }
                        else
                        {
                            <some style="color: red">Not Authors</some>
                        }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Images, "Images", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ if (ViewBag.imagesList.Count >= 1)
                    {
                        foreach (Image a in ViewBag.imagesList)
                        {
                            <input type="checkbox" name="selectedImages" value="@a.Id"
                                   @(Model.Images.Contains(a) ? "checked=\"checked\"" : "") />@a.Alt <br />
                            }
                        }
                        else
                        {
                            <some style="color: red">Not Images</some>
                        }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenreId, "GenreId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GenreId, ViewBag.genresList as SelectList, "Without genre", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Genre.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumPages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumPages, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumPages, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Popularity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Popularity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Popularity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsAvaible, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsAvaible)
                    @Html.ValidationMessageFor(model => model.IsAvaible, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
